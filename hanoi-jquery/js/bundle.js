!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){const o=r(1),n=r(2);$(()=>{const e=$(".hanoi"),t=new n;new o(t,e)})},function(e,t){e.exports=class{constructor(e,t){this.game=e,this.$el=t,this.setupTowers(),this.fromTowerIdx=null,this.render(),this.$el.on("click","ul",this.clickTower.bind(this))}clickTower(e){const t=$(e.currentTarget).index();null===this.fromTowerIdx?this.fromTowerIdx=t:(this.game.move(this.fromTowerIdx,t)||alert("Invalid Move! Try again."),this.fromTowerIdx=null),this.render(),this.game.isWon()&&(this.$el.off("click"),this.$el.addClass("game-over"),alert("Good work, you!"))}setupTowers(){for(var e=0;e<3;e++){const r=$("<ul>");for(var t=0;t<3;t++){let o=$("<li>");0===e?o.addClass(`disk-${t+1}`):o.addClass(""),r.append(o)}this.$el.append(r)}}render(){const e=this.$el.find("ul");e.removeClass(),null!==this.fromTowerIdx&&e.eq(this.fromTowerIdx).addClass("selected"),this.game.towers.forEach((t,r)=>{const o=e.eq(r).children();o.removeClass(),t.forEach((e,t)=>{o.eq(-1*(t+1)).addClass(`disk-${e}`)})})}}},function(e,t){e.exports=class{constructor(){this.towers=[[3,2,1],[],[]]}isValidMove(e,t){const r=this.towers[e],o=this.towers[t];return 0!==r.length&&(0==o.length||r[r.length-1]<o[o.length-1])}isWon(){return 3==this.towers[2].length||3==this.towers[1].length}move(e,t){return!!this.isValidMove(e,t)&&(this.towers[t].push(this.towers[e].pop()),!0)}print(){console.log(JSON.stringify(this.towers))}promptMove(e,t){this.print(),e.question("Enter a starting tower: ",r=>{const o=parseInt(r);e.question("Enter an ending tower: ",e=>{const r=parseInt(e);t(o,r)})})}run(e,t){this.promptMove(e,(r,o)=>{this.move(r,o)||console.log("Invalid move!"),this.isWon()?(this.print(),console.log("You win!"),t()):this.run(e,t)})}}}]);